---
# Create a selfsigned Issuer, in order to create a root CA certificate for
# signing webhook serving certificates
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: porkbun-selfsign
  namespace: cert-manager
  labels:
    app: porkbun
    release: porkbun-v0.0.1
    heritage: porkbun
spec:
  selfSigned: {}

---

# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: porkbun-ca
  namespace: cert-manager
  labels:
    app: porkbun
    release: porkbun-v0.0.1
    heritage: porkbun
spec:
  secretName: porkbun-ca
  duration: 43800h # 5y
  issuerRef:
    name: porkbun-selfsign
  commonName: "ca.porkbun.cert-manager"
  isCA: true

---

# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: porkbun-ca
  namespace: cert-manager
  labels:
    app: porkbun
    release: porkbun-v0.0.1
    heritage: porkbun
spec:
  ca:
    secretName: porkbun-ca

---

# Finally, generate a serving certificate for the webhook to use
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: porkbun-webhook-tls
  namespace: cert-manager
  labels:
    app: porkbun
    release: porkbun-v0.0.1
    heritage: porkbun
spec:
  secretName: porkbun-webhook-tls
  duration: 8760h # 1y
  issuerRef:
    name: porkbun-ca
  dnsNames:
  - porkbun
  - porkbun.cert-manager
  - porkbun.cert-manager.svc
